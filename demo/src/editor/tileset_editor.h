///////////////////////////////////////////////////////////////////////////////
//            Copyright (C) 2004-2008 by The Allacrost Project
//                         All Rights Reserved
//
// This code is licensed under the GNU GPL version 2. It is free software
// and you may modify it and/or redistribute it under the terms of this license.
// See http://www.gnu.org/copyleft/gpl.html for details.
///////////////////////////////////////////////////////////////////////////////

/*!****************************************************************************
* \file    tileset_editor.h
* \author  Bar�� Soner U�akl? blackkknight@hotmail.com
* \brief   Header file for editor's tileset editor dialog
*****************************************************************************/


#ifndef __TILESET_EDITOR_HEADER__
#define __TILESET_EDITOR_HEADER__

#include <vector>

#include <QDialog>
#include <QGLWidget>
#include <QMessageBox>
#include <QMouseEvent>
#include <QAction>
#include <QLabel>
#include <QPushButton>
#include <QGridLayout>
#include <QFileDialog>

#include "tileset.h"

namespace hoa_editor
{

/** ****************************************************************************
*** \brief OpenGL widget display of a tileset within the tileset editor
***
*** This class represents the display of an open tileset within the tileset editor.
*** It is through this class that the user interacts with the open tileset image,
*** viewing and modifying its properties.
***
*** \todo The tileset pointer is really better suited to be a local, but for some
*** reason when you change it to a local, the app will seg fault when you close
*** the tileset editor. I believe this is because the destructor of this class
*** destroys the video engine singleton, and this is done before the tileset
*** object is destructed (which contain StillImage objects, that need the video
*** engine to be destroyed properly). Fix this in the future by not creating a
*** video engine instance for this tileset display.
*** ***************************************************************************/
class TilesetDisplay : public QGLWidget
{
public:
	TilesetDisplay();
	~TilesetDisplay();

	//! \brief The current tileset that is being edited.
	Tileset *tileset;

protected:
	void initializeGL();
	void paintGL();
	void resizeGL(int w, int h);

	//! \name Mouse Processing Functions
	//! \brief Functions to process mouse events on the map.
	//! \note Reimplemented from QScrollView.
	//! \param evt A pointer to the QMouseEvent generated by the mouse.
	//{@
	void contentsMousePressEvent(QMouseEvent *evt);
//	void contentsMouseMoveEvent(QMouseEvent *evt);
//	void contentsMouseReleaseEvent(QMouseEvent *evt);
//	void contentsContextMenuEvent(QContextMenuEvent *evt);
	//@}

private:
	//! \brief A red, translucent square the size of 1/4th of a tile
	hoa_video::StillImage _red_square;
}; // class TilesetDisplay : public QGLWidget


/** ****************************************************************************
*** \brief The primary class for the tileset editor
***
*** This class contains an instance of a TilesetDisplay, push buttons used for
*** modifying the properties of the tileset
*** ***************************************************************************/
class TilesetEditor : public QDialog
{
	//! Macro needed to use Qt's slots and signals.
	Q_OBJECT

public:
	//! \name TilesetEditor constructor
	//! \brief A constructor for the TilesetEditor class.This class is used to modify the tileset
	//! \definition files through an interface.
	//! \param parent The widget from which this dialog was invoked.
	//! \param name The name of this widget.
	//! \param prop True when accessing an already loaded map's properties, false otherwise.
	TilesetEditor(QWidget* parent, const QString& name, bool prop);
	~TilesetEditor();

private slots:
	//! Loads a TDF file
	void _OpenFile();

private:
	//! A pushbutton for opening a new tileset
	QPushButton* _opentileset_pbut;

	//! A pushbutton for canceling the tileset_editor
	QPushButton* _cancel_pbut;

	//! A pushbutton for okaying the tileset_editor
	QPushButton* _ok_pbut;

	//! A layout to manage all the labels, spinboxes, and listviews.
	QGridLayout* _dia_layout;

	//! \brief The tileset display
	TilesetDisplay* _tset_display;
}; // class TilesetEditor : public QDialog

} // namespace hoa_editor

#endif
// __TILESET_EDITOR_HEADER__

