--------------------------------------------------------------------------------
-- 01_sand_dock_departure.lua
--
-- This script controls the events that happen on the Harrvah sand dock map toward
-- the end of chapter 1. The script is pretty small and straight forward, without
-- many event sequences. Finishing the events on this map sends the player to chapter 2.
--------------------------------------------------------------------------------
local ns = {}
setmetatable(ns, {__index = _G})
a01_sand_dock_departure = ns;
setfenv(1, ns);

-- Set to true to turn on debugging messages generated by this map script
DEBUG = true;

data_file = "lua/data/maps/harrvah_sand_dock.lua";
location_filename = "img/portraits/locations/blank.png";
map_name = "Harrvah - Sand Dock";

sound_filenames = {};

music_filenames = {};
music_filenames[1] = "mus/Seeking_New_Worlds.ogg";

-- Primary Map Classes
Map = {};
ObjectManager = {};
DialogueManager = {};
EventManager = {};
TreasureManager = {};
GlobalEvents = {};

-- All custom map functions are contained within the following table.
-- String keys in this table serves as the names of these functions.
functions = {};

function Load(m)
	Map = m;
	ObjectManager = Map.object_supervisor;
	DialogueManager = Map.dialogue_supervisor;
	EventManager = Map.event_supervisor;
	TreasureManager = Map.treasure_supervisor;
	GlobalEvents = Map.map_event_group;

	-- Setup the order in which we wish to draw the tile and object layers
	Map:ClearLayerOrder();
	Map:AddTileLayerToOrder(0);
	Map:AddTileLayerToOrder(1);
	Map:AddTileLayerToOrder(2);
	Map:AddObjectLayerToOrder(0);
	Map:AddTileLayerToOrder(3);

	CreateObjects();
	CreateSprites();
	CreateDialogues();
	CreateEvents();

	-- Music: should use the same as the current music playing from previous map (a01_harrvah_captial_aftermath.lua)
	Map:SetCurrentTrack(0);

	-- This entire map is played out in scene state with no GUI objects on screen other than the dialogue window
	Map:DisableIntroductionVisuals();
	Map.unlimited_stamina = true;
	Map:ShowStaminaBar(false);
	Map:ShowDialogueIcons(true);

	-- Quickly fade the screen back in (TODO: is this necessary to have or is it down automatically?)
--	VideoManager:FadeScreen(hoa_video.Color(0.0, 0.0, 0.0, 0.0), 1000);
	Map:SetCamera(sprites["claudius"]);
	IfPrintDebug(DEBUG, "Map loading complete");
end -- Load(m)



function Update()
	-- Nothing required
end



function Draw()
	Map:DrawMapLayers();
end



function CreateObjects()
	-- TODO: add the sand glider craft east of the north dock
end;



function CreateSprites()
	IfPrintDebug(DEBUG, "Creating sprites...");

	sprites["claudius"] = ConstructSprite("Claudius", 1, 98, 110);
	sprites["claudius"]:SetDirection(hoa_map.MapMode.NORTH);
	ObjectManager:AddObject(sprites["claudius"]);

	sprites["dock_guard"] = ConstructSprite("Knight01", 10, 91, 98);
	sprites["dock_guard"]:SetDirection(hoa_map.MapMode.SOUTH);
	ObjectManager:AddObject(sprites["dock_guard"]);

	sprites["glider_handler"] = ConstructSprite("Knight02", 11, 103, 68);
	sprites["glider_handler"]:SetDirection(hoa_map.MapMode.NORTH);
	ObjectManager:AddObject(sprites["glider_handler"]);

	sprites["west_worker"] = ConstructSprite("Knight03", 12, 69, 82);
	sprites["west_worker"]:SetDirection(hoa_map.MapMode.WEST);
	ObjectManager:AddObject(sprites["west_worker"]);

	sprites["east_worker"] = ConstructSprite("Knight04", 13, 129, 80);
	sprites["east_worker"]:SetDirection(hoa_map.MapMode.EAST);
	ObjectManager:AddObject(sprites["east_worker"]);

	sprites["north_worker"] = ConstructSprite("Knight01", 14, 92, 44);
	sprites["north_worker"]:SetDirection(hoa_map.MapMode.NORTH);
	ObjectManager:AddObject(sprites["north_worker"]);

	-- Initially invisible, Claudius' family walks in from off the screen during the final event
	sprites["marcus"] = ConstructSprite("Marcus", 501, 98, 52);
	sprites["marcus"]:SetDirection(hoa_map.MapMode.EAST);
	ObjectManager:AddObject(sprites["marcus"]);

	sprites["vanica"] = ConstructSprite("Vanica", 502, 98, 55);
	sprites["vanica"]:SetDirection(hoa_map.MapMode.EAST);
	ObjectManager:AddObject(sprites["vanica"]);

	sprites["laila"] = ConstructSprite("Laila", 500, 98, 60);
	sprites["laila"]:SetDirection(hoa_map.MapMode.EAST);
	ObjectManager:AddObject(sprites["laila"]);
end -- function CreateSprites()



function CreateDialogues()
	IfPrintDebug(DEBUG, "Creating dialogues...");

	-- TODO: replace the sprite IDs in the AddLine() calls with pointers to the sprite objects
	local dialogue;
	local text;

	----------------------------------------------------------------------------
	---------- Dialogues attached to characters
	----------------------------------------------------------------------------
	dialogue = hoa_map.MapDialogue.Create(10);
		text = hoa_system.Translate("The sand dock was one of the few structures not damaged in the attack.");
		dialogue:AddLine(text, sprites["dock_guard"]:GetObjectID());
	sprites["dock_guard"]:AddDialogueReference(10);
end -- function CreateDialogues()


-- Creates all events and sets up the entire event sequence chain
function CreateEvents()
	IfPrintDebug(DEBUG, "Creating events...");

	local event = {};
end -- function CreateEvents()

